@page "{id}"
@model VehicleQuotes.AdminPortal.Pages.Quotes.EditModel

@{
    ViewData["Title"] = "Details";
}

<h1>Edit</h1>

<h4>Quote</h4>
<hr />

<div class="row">
    <dl class="row col-sm-6">
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.Year)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.Year)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.Make)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.Make)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.Model)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.Model)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.BodyType)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.BodyType.Name)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.Size)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.Size.Name)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.OfferedQuote)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.OfferedQuote)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.Message)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.Message)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.CreatedAt)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.CreatedAt)
        </dd>
    </dl>
    <dl class="row col-sm-6">
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.ItMoves)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.ItMoves)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.HasAllWheels)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.HasAllWheels)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.HasAlloyWheels)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.HasAlloyWheels)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.HasAllTires)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.HasAllTires)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.HasKey)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.HasKey)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.HasTitle)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.HasTitle)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.RequiresPickup)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.RequiresPickup)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.HasEngine)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.HasEngine)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.HasTransmission)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.HasTransmission)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Quote.HasCompleteInterior)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Quote.HasCompleteInterior)
        </dd>
    </dl>
</div>

<h4>Existing Images</h4>
<hr />

<div class="row mb-4">
    @foreach (var image in Model.Quote.QuoteImages)
    {
        <div class="col-3">
            <img
                data-id="@image.ID"
                src="@image.Url"
                asp-append-version="true"
                alt="Quote image"
                class="mx-auto d-block w-75"
            />

            <form method="post">
                <button
                    type="submit"
                    asp-page-handler="DeleteImage"
                    asp-route-imageId="@image.ID"
                    class="btn btn-outline-danger mx-auto d-block"
                >
                    Delete
                </button>
            </form>
        </div>
    }
</div>

<h4>Add Images</h4>
<hr />

<div class="row">
    <form method="post" enctype="multipart/form-data">
        <div asp-validation-summary="All" class="text-danger"></div>

        <partial name="_NewImages.cshtml" />

        <div class="form-group mb-3">
            <button
                type="submit"
                asp-page-handler="Save"
                class="btn btn-primary"
            >
                Save
            </button>
        </div>
    </form>
</div>

<div class="row">
    <a asp-page="./Index">Back to List</a>
</div>

@section scripts {
    <script src="~/js/quotes.new-images.js" asp-append-version="true"></script>
}
